Function:
  Enabled For RDMLX:  Yes

  Source: |
    Function Options(*DIRECT) Rcv_List(#wLKData #wLRet)
    
    * Unique Key Data.
    Def_List Name(#wLKData) Fields(#VTF_KEY1 #VTF_KEY2 #VTF_KEY3) Type(*WORKING) Entrys(1)
    
    * Return messages.
    Def_List Name(#wLRet) Fields(#BIFMSGC #BIFMSG1 #BIFMSG2) Counter(#BIFMSGCNT) Type(*WORKING) Entrys(*MAX)
    
    * Start testing.
    Clr_List Named(#wLRet)
    #Com_Owner.mthAdd_Msg( OK *Function ('Start - ' + *Function_Desc) )
    
    Get_Entry Number(1) From_List(#wLKData)
    
    Use Builtin(Get_Session_Value) With_Args(DBUT) To_Get(#LF_DB_Type #LF_rc)
    
    #Com_Owner.mthSelect_SQL_VTL156710M( #LF_rc )
    
    #Com_Owner.mthAdd_Msg( OK *Function 'End' )
    Use Builtin(CLR_MESSAGES)
    Return
    
    * Add a message to the Return Message List.
    Mthroutine Name(mthAdd_Msg)
    Define_Map For(*INPUT) Class(#BIFMSGC) Name(#this_msg_code)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_msg1)
    Define_Map For(*INPUT) Class(#BIFMSG2) Name(#this_msg2)
    
    #BIFMSGC := #this_msg_code
    #BIFMSG1 := #this_msg1
    #BIFMSG2 := #this_msg2
    Add_Entry To_List(#wLRet)
    Endroutine
    
    * Add a sub message to the Return Message List.
    Mthroutine Name(mthAdd_SubMsg)
    Define_Map For(*INPUT) Class(#BIFMSGC) Name(#this_msg_code)
    Define_Map For(*INPUT) Class(#BIFMSG1) Name(#this_msg1)
    Define_Map For(*INPUT) Class(#BIFMSG2) Name(#this_msg2)
    
    #BIFMSGC := #this_msg_code
    #BIFMSG1 := ' ' + #this_msg1
    #BIFMSG2 := #this_msg2
    Add_Entry To_List(#wLRet)
    Endroutine
    
    
    Define Field(#LF_LN_Record_Counter) Reffld(#Std_Count)
    Define Field(#LF_ID_Record_Counter) Reffld(#Std_Count)
    Define Field(#LF_Total_Record) Reffld(#Std_Count)
    Define Field(#LF_rc) Reffld(#BIFA002A) Default(OK)
    
    Define Field(#LF_Temp1) Length(*REFFLD *PLUS 2) Reffld(#xEmployeeSalary)
    Define Field(#LF_Temp2) Length(*REFFLD *PLUS 2) Reffld(#xEmployeeSalary)
    Define Field(#LF_DB_Type) Type(*CHAR) Length(32)
    Define Field(#LF_SubString_Function) Type(*CHAR) Length(20)
    
    Mthroutine Name(mthSelect_SQL_VTL156710M)
    Define_Map For(*BOTH) Class(#BIFA002A) Name(#this_rc)
    
    If (#this_rc *NE ER)
    #Com_Owner.mthAdd_SubMsg( OK 'Using Field Names' '' )
    
    #Com_Owner.mthAdd_SubMsg( OK '- Select By Field Names' ('Select_SQL Fields(#F@A #F#B #F$C) From_Files((L1))') )
    Select_Sql Fields(#F156710@A #F156710#B #F156710$C) From_Files((VTL156710M))
    Leave
    Endselect
    
    If (#LF_DB_Type *NE MYSQL)
    #Com_Owner.mthAdd_SubMsg( OK '- File Name Correlation' ('Select_SQL Fields(#F@A ' + *Quote + 'L1.F@A' + *Quote + ') From_Files((L1))') )
    Select_Sql Fields((#F156710@A 'VTL156710M.F156710@A')) From_Files((VTL156710M))
    Leave
    Endselect
    
    #Com_Owner.mthAdd_SubMsg( OK '- Order_By with Correlation' ('Select_SQL Fields(#F@A ' + *Quote + 'L1.F@A' + *Quote + ') From_Files((L1)) Order_By(L1.F@A)') )
    Select_Sql Fields((#F156710@A 'VTL156710M.F156710@A')) From_Files((VTL156710M)) Order_By(VTL156710M.F156710@A)
    Leave
    Endselect
    
    #Com_Owner.mthAdd_SubMsg( OK '- Group_By with Correlation' ('Select_SQL Fields(#F@A ' + *Quote + 'L1.F@A' + *Quote + ') From_Files((L1)) Group_By(L1.F@A)') )
    Select_Sql Fields((#F156710@A 'VTL156710M.F156710@A')) From_Files((VTL156710M)) Group_By(VTL156710M.F156710@A)
    Leave
    Endselect
    
    #Com_Owner.mthAdd_SubMsg( OK '- Order/Group_By with Correlation' ('Select_SQL Fields(#F@A ' + *Quote + 'L1.F@A' + *Quote + ') From_Files((L1)) Group_By(L1.F@A) Order_By(L1-F@A)') )
    Select_Sql Fields((#F156710@A 'VTL156710M.F156710@A')) From_Files((VTL156710M)) Group_By(VTL156710M.F156710@A) Order_By(VTL156710M.F156710@A)
    Leave
    Endselect
    
    Endif
    
    #Com_Owner.mthAdd_SubMsg( OK '- Order/Group_By with Correlation Alias' ('Select_SQL Fields(#F@A ' + *Quote + 'F1.F@A' + *Quote + ') From_Files((L1 F1)) Group_By(F1.F@A) Order_By(F1.F@A)') )
    Select_Sql Fields((#F156710@A 'F1.F156710@A')) From_Files((VTL156710M F1)) Group_By(F1.F156710@A) Order_By(F1.F156710@A)
    Leave
    Endselect
    
    * @#$ characters are retained on iSeries, but are converted to be '_' on Windows.
    If (*CPUTYPE <> AS400)
    #Com_Owner.mthAdd_SubMsg( OK 'Using Table Column Names F1.F_A on Windows' '' )
    
    If (#LF_DB_Type *NE MYSQL)
    
    #Com_Owner.mthAdd_SubMsg( OK '- Order_By with Correlation' ('Select_SQL Fields(#F@A ' + *Quote + 'L1.F_A' + *Quote + ') From_Files((L1)) Order_By(L1.F_A)') )
    Select_Sql Fields((#F156710@A 'VTL156710M.F156710_A')) From_Files((VTL156710M)) Order_By(VTL156710M.F156710_A)
    Leave
    Endselect
    
    Endif
    
    #Com_Owner.mthAdd_SubMsg( OK '- Use Mixed Names and Correlation Alias' '' )
    
    #Com_Owner.mthAdd_SubMsg( OK '- Order_By with Correlation Alias' ('Select_SQL Fields(#F@A ' + *Quote + 'F1.F@A' + *Quote + ') From_Files((L1 F1)) Order_By(F1.F_A)') )
    Select_Sql Fields((#F156710@A 'F1.F156710@A') (#F156710#B 'F1.F156710_B')) From_Files((VTL156710M F1)) Order_By(F1.F156710_A)
    Leave
    Endselect
    Endif
    Endif
    Endroutine
    
    
    
